/*
 * Copyright 2018 Bud Byrd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { setUrl('http://repo.spring.io/plugins-release') }
    }
    dependencies {
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

version version
group 'com.budjb'

dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "https://dl.bintray.com/budjb/spring" } // TODO remove this once on jcenter
}

dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-validation'
    compile 'com.budjb:spring-distributed-locks:0.1.4.BETA'
    compile 'com.budjb:spring-distributed-cluster:0.1.0.BETA'

    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.2.6'
    testCompile 'org.objenesis:objenesis:2.6'

    optional "org.springframework.boot:spring-boot-configuration-processor"
}

compileJava.dependsOn(processResources)

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.name
            version project.version
        }
    }
}

bintray {
    user = System.getenv(bintrayUsernameEnvVar)
    key = System.getenv(bintrayKeyEnvVar)
    publish = true

    pkg {
        websiteUrl = 'https://github.com/budjb/spring-distributed-scheduler'
        issueTrackerUrl = 'https://github.com/budjb/spring-distributed-scheduler/issues'
        vcsUrl = 'git@github.com:budjb/spring-distributed-scheduler.git'
        githubRepo = 'budjb/spring-distributed-scheduler'

        desc = 'Core implementation of a distributed workload scheduling library for Spring Boot.'
        labels = ['spring-boot', 'spring-framework', 'hazelcast']
        repo = 'spring'
        name = project.name
        licenses = ['Apache-2.0']
        publications = ['library']

        version {
            name = project.version
            released = new Date()
            vcsTag = project.version
        }
    }
}
